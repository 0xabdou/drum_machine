{"version":3,"sources":["features/drum-machine/machine-context.ts","features/drum-machine/components/Pad.tsx","features/drum-machine/components/Switch.tsx","features/drum-machine/components/Slider.tsx","features/drum-machine/DrumMachine.tsx","features/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["MachineContext","createContext","Pad","config","useState","active","setActive","machineContext","useContext","buttonRef","useRef","audioRef","soundUrl","bank","letter","toLowerCase","useEffect","document","addEventListener","unfocus","focus","removeEventListener","e","console","log","key","current","click","fakePlay","volume","play","ref","id","className","onClick","audio","Audio","actuallyPlayAudio","setDisplay","scheduleFade","disabled","power","src","preload","Switch","props","label","on","Slider","type","min","max","onChange","Number","target","value","HEATER_CONFIG","display","PIANO_CONFIG","HEATER_DISPLAY","DrumMachine","setPower","setBank","setVolume","opacity","setOpacity","timer","setTimer","currentConfig","clearInterval","newTimer","setTimeout","pads","Object","keys","map","k","padConfig","displayClassName","Provider","icon","faFreeCodeCamp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","appHeight","doc","documentElement","window","innerHeight","style","setProperty"],"mappings":"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","file":"static/js/main.8774f229.chunk.js","sourcesContent":["import {createContext} from \"react\";\n\ntype MachineContextType = {\n  power: boolean;\n  bank: boolean;\n  volume: number;\n  setDisplay: (s:string) => void;\n  scheduleFade: () => void;\n}\nconst MachineContext = createContext<MachineContextType>({} as MachineContextType);\n\nexport default MachineContext;","import './Pad.scss';\nimport {useContext, useEffect, useRef, useState} from \"react\";\nimport MachineContext from \"../machine-context\";\n\nexport type PadConfig = {\n  letter: string;\n  display: string;\n}\n\nconst Pad = (config: PadConfig) => {\n  const [active, setActive] = useState(false);\n  const machineContext = useContext(MachineContext);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const audioRef = useRef<HTMLAudioElement>(null);\n\n  const soundUrl = 'mp3/' + (machineContext.bank ? 'p_' : 'h_') + config.letter.toLowerCase() + '.mp3';\n\n  useEffect(() => {\n    document.addEventListener('keyup', unfocus);\n    document.addEventListener('keydown', focus);\n    return () => {\n      document.removeEventListener('keyup', unfocus);\n      document.removeEventListener('keydown', focus);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const unfocus = (e: KeyboardEvent) => {\n    console.log(e.key);\n    if (e.key.toLowerCase() === config.letter.toLowerCase()) {\n      buttonRef.current?.click();\n      setActive(false);\n    }\n  };\n\n  const focus = (e: KeyboardEvent) => {\n    if (e.key.toLowerCase() === config.letter.toLowerCase()) {\n      fakePlay();\n      setActive(true);\n    }\n  };\n\n  const actuallyPlayAudio = () => {\n    const audio = new Audio(soundUrl);\n    audio.volume = machineContext.volume / 100;\n    audio.play();\n  };\n\n  const fakePlay = () => {\n    if (audioRef.current) audioRef.current.volume = 0;\n    audioRef.current?.play();\n  };\n\n  const onClick = () => {\n    actuallyPlayAudio();\n    fakePlay();\n    machineContext.setDisplay(config.letter);\n    machineContext.scheduleFade();\n  };\n\n\n  return (\n    <button\n      ref={buttonRef}\n      id={config.letter + 'i'}\n      className={`drum-pad ${active ? 'active' : ''}`}\n      onClick={onClick}\n      disabled={!machineContext.power}>\n      {config.letter}\n      <audio ref={audioRef} id={config.letter} className='clip' src={soundUrl} preload='auto'/>\n    </button>\n  );\n};\n\nexport default Pad;\n","import './Switch.scss';\n\ntype SwitchProps = {\n  label: string,\n  on: boolean,\n  onClick: () => void,\n  disabled: boolean,\n};\n\nconst Switch = (props: SwitchProps) => {\n  const disabled = props.disabled ? 'disabled' : '';\n  const onClick = () => {\n    if (props.disabled) return;\n    props.onClick();\n  };\n  return (\n    <div className={'switch-wrapper ' + disabled}>\n      {props.label}\n      <div className='Switch' onClick={onClick}>\n        <div className={`inner ${props.on ? 'on' : ''}`}/>\n      </div>\n    </div>\n  );\n};\n\nexport default Switch;\n","import './Slider.scss';\nimport {ChangeEvent, useContext} from \"react\";\nimport MachineContext from \"../machine-context\";\n\ntype SliderProps = {\n  min: number;\n  max: number;\n  value: number,\n  onChange: (value: number) => void,\n}\n\nconst Slider = (props: SliderProps) => {\n  const power = useContext(MachineContext).power;\n  const onVolumeChange = (e: ChangeEvent<HTMLInputElement>) => {\n    props.onChange(Number(e.target.value));\n  };\n\n  return (\n    <input\n      id='volume'\n      type='range'\n      min={props.min} max={props.max}\n      onChange={onVolumeChange}\n      disabled={!power}/>\n  );\n};\n\nexport default Slider;","import './DrumMachine.scss';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faFreeCodeCamp} from \"@fortawesome/free-brands-svg-icons\";\nimport {useState} from \"react\";\nimport Pad, {PadConfig} from \"./components/Pad\";\nimport Switch from \"./components/Switch\";\nimport Slider from \"./components/Slider\";\nimport MachineContext from \"./machine-context\";\n\nconst HEATER_CONFIG: { [key: string]: PadConfig } = {\n  'Q': {letter: 'Q', display: 'Heater 1'},\n  'W': {letter: 'W', display: 'Heater 2'},\n  'E': {letter: 'E', display: 'Heater 3'},\n  'A': {letter: 'A', display: 'Heater 4'},\n  'S': {letter: 'S', display: 'Clap'},\n  'D': {letter: 'D', display: 'Open HH'},\n  'Z': {letter: 'Z', display: \"Kick n' Hat\"},\n  'X': {letter: 'X', display: 'Kick'},\n  'C': {letter: 'C', display: 'Closed HH'},\n};\n\nconst PIANO_CONFIG: { [key: string]: PadConfig } = {\n  'Q': {letter: 'Q', display: 'Chord 1'},\n  'W': {letter: 'W', display: 'Chord 2'},\n  'E': {letter: 'E', display: 'Chord 3'},\n  'A': {letter: 'A', display: 'Shaker'},\n  'S': {letter: 'S', display: 'Open HH'},\n  'D': {letter: 'D', display: 'Closed HH'},\n  'Z': {letter: 'Z', display: \"Punchy Kick\"},\n  'X': {letter: 'X', display: 'Side Stick'},\n  'C': {letter: 'C', display: 'Snare'},\n};\n\nconst MIN_VOLUME = 0;\nconst MAX_VOLUME = 100;\n\nconst PIANO_DISPLAY = 'Smooth Piano Kit';\nconst HEATER_DISPLAY = 'Heater Kit';\n\nconst DrumMachine = () => {\n  const [power, setPower] = useState(true);\n  const [bank, setBank] = useState(false);\n  const [volume, setVolume] = useState(50);\n  const [display, setDisplay] = useState(HEATER_DISPLAY);\n  const [opacity, setOpacity] = useState(0);\n  const [timer, setTimer] = useState<NodeJS.Timeout>();\n\n  const currentConfig = bank ? PIANO_CONFIG : HEATER_CONFIG;\n\n  const togglePower = () => {\n    setPower(!power);\n  };\n\n  const toggleBank = () => {\n    setBank(!bank);\n    if (!bank) setDisplay(PIANO_DISPLAY);\n    else setDisplay(HEATER_DISPLAY);\n    scheduleFade();\n  };\n\n  const onVolumeChange = (value: number) => {\n    setVolume(value);\n    setDisplay(`Volume: ${value}`);\n    scheduleFade();\n  };\n\n  const scheduleFade = () => {\n    if (timer) clearInterval(timer);\n    setOpacity(1);\n    const newTimer = setTimeout(() => {\n      setOpacity(0);\n    }, 1000);\n    setTimer(newTimer);\n  };\n\n  const keys = Object.keys(currentConfig);\n  const pads = keys.map(k => {\n    const padConfig = currentConfig[k];\n    return <Pad key={k} {...padConfig} />;\n  });\n\n  const displayClassName = opacity === 0 ? 'transparent' : 'opaque';\n  return (\n    <MachineContext.Provider value={{\n      volume: volume,\n      power: power,\n      bank: bank,\n      setDisplay: setDisplay,\n      scheduleFade: scheduleFade,\n    }}>\n      <div id=\"drum-machine\">\n        <div id='logo'>\n          FCC\n          <FontAwesomeIcon id='logo-icon' icon={faFreeCodeCamp}/>\n        </div>\n        <div id='pads'>\n          {pads}\n        </div>\n        <div id='controls'>\n          <Switch label='POWER' on={power} onClick={togglePower} disabled={false}/>\n          <div id='display'>\n            <span className={'display ' + displayClassName}>{display}</span>\n          </div>\n          <Slider min={MIN_VOLUME} max={MAX_VOLUME} value={volume} onChange={onVolumeChange}/>\n          <Switch label='BANK' on={bank} onClick={toggleBank} disabled={!power}/>\n        </div>\n      </div>\n    </MachineContext.Provider>\n  );\n};\n\n\nexport default DrumMachine;","import './App.scss';\nimport DrumMachine from \"../drum-machine/DrumMachine\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DrumMachine/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './features/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nconst appHeight = () => {\n  const doc = document.documentElement;\n  const appHeight = window.innerHeight;\n  doc.style.setProperty('--app-height', `${appHeight}px`);\n};\n\nwindow.addEventListener('resize', appHeight);\nappHeight();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}